datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Product {
  id String @id @default(uuid())
  name String
  company String
  description String
  featured Boolean
  image String
  price Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  clerkId String
  favorites Favorite[]
  reviews Review[]
  cartItems CartItem[]
}

model Favorite {
  id        String   @id @default(uuid())
  clerkId  String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Review {
  id String @id @default(uuid())
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
  rating Int
  comment String
  authorName String
  authorImageUrl String
  clerkId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
 id String @id @default(uuid())
 cartItems CartItem[]
 numOfItems Int @default(0)
 cartTotal Int @default(0)
 shipping Int @default(5)
 tax Int @default(0)
 taxRate Float @default(0.1)
 orderTotal Int @default(0)
 createdAt DateTime @default(now())
 updatedAt DateTime @updatedAt
 clerkId String
}

model CartItem {
  id String @id @default(uuid())
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
  cart Cart @relation(fields: [cartId], references: [id])
  cartId String 
  amount Int @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id String @id @default(uuid())
  clerkId String
  products Int @default(0)
  orderTotal Int @default(0)
  tax Int @default(0)
  shipping Int @default(0)
  email String
  isPaid Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
